E1 GIT RESEARCH

1. initializes a new git repository 

2. 'git add' stages the file to be saved to the repository while 'git commit' actually saves it, aka commits the saved changes to the repository

3. staged files haven't actually been saved yet but are just ready to be committed and committed files are saved versions of your code (with messages)

4. -a or .

5. to unstage you would use 'git reset'. to revert, you would have to find the commit message attached to the version you want to revert to by using 'git log path/to/file' and then 'gti checkout <commit> path/to/file' then 'git commit'

6. because they keep things organized and tell you what is different about that verison so that you can go back and find it easily when you need to 

7. isn't this the same question as the second half of #5?

8. :q


E2 GITHUB RESEARCH

1. github is remote repository where you can put files to be viewed by the public. git is a version control system that saves versions of files locally as you work on them. yes, git could exist without github because there are other remote repositories...although Github is the most widely used one. github couldnt exist without git though because github depends on the git commands

2. because by giving us free server space it allows us to quickly/easily create websites. the open source community surrounding github is also cool (have to pay to be private, etc)

3. pushes the file from a local repository to a remote one 

4. 'git pull' incorporates changes from a remote repository into your local branch. 'git pull' is basically a combination of 'git fetch' and 'git merge' where fetch goes and gets the changes and merge puts those changes into the local branch


E4 WHATS THE INTERNET AGAIN?

1. when you press enter, your computer (the client) is making a request, or asking for data from a server. the information you are sending over the internet is bundled into manageable chunks called packets and a unique identifier (called an IP address) that is associated with your machine is attached. a port number is also attached so that the destination computer knows where to listen for the incoming request

2. To find the IP address of the destination computer, the browser connects to the Domain Name Server, which gives the proper IP address so that the browser can connect to the target computer and make the request 

3. the browser then sends an HTTP request to the web server

5. the packet containing your request then bounces around several routers, which examine the IP address of the packet to see if it matches an address in its routing table. if it does, it sends it on, and if it doesn't, the router passes it up the infrastructure of routers to continue the process until it reaches the Network Service Proivder backbones, which have the largest routing tables and can find the destination. Then your packet is passed back down to routers until it reaches the server (the DNS has a similar hierarchy). These routers are hopefully in the same geographical area but not necessarily 

6. the server processes the request and sends back an HTML file to the client 

7. the browser renders the HTML into the webpage you see


E5 RUBY ROCKS

1. 404 "there isn't a github page here"

2. it means that the client was able to find the server and give it the request but that the server couldn't find the information that was requested (suggesting it doesn't exist, or at least doesn't exist in that location)

3. because that is the number assigned to that specific problem in the HTTP status codes established by WC3

4. nope









